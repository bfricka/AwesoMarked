// Generated by CoffeeScript 1.4.0
var Stor, aMarked;

Stor = (function() {

  function Stor() {
    this.amp = amplify.store;
  }

  Stor.prototype.get = function(key) {
    return this.amp(key);
  };

  Stor.prototype.set = function(key, val, exp) {
    if (exp == null) {
      exp = null;
    }
    return this.amp(key, val, exp);
  };

  Stor.prototype.del = function(key) {
    return this.amp(key, null);
  };

  return Stor;

})();

aMarked = angular.module('aMarked', []);

/* --------------------------------------------
     Begin directives.coffee
--------------------------------------------
*/


aMarked.directive('markdownProcessor', function() {
  return {
    restrict: 'A',
    link: function(scope, elem, attrs) {
      var markedOpts;
      markedOpts = {
        gfm: true,
        sanitize: true,
        highlight: function(code, lang) {
          var hl;
          if (lang && hljs.LANGUAGES[lang]) {
            hl = hljs.highlight(lang, code);
          } else {
            hl = hljs.highlightAuto(code);
          }
          return hl.value;
        }
      };
      return scope.$watch('markdown', function(md) {
        var output;
        scope.$emit('markdownChange', md);
        output = marked(md, markedOpts);
        scope.preview = output;
      });
    }
  };
});

aMarked.directive('markdownPreview', function() {
  return {
    restrict: 'A',
    link: function(scope, elem, attrs) {
      return scope.$watch('preview', function(els) {
        return $(elem).empty().append(els);
      });
    }
  };
});

/* --------------------------------------------
     Begin filters.coffee
--------------------------------------------
*/


/* --------------------------------------------
     Begin services.coffee
--------------------------------------------
*/


/* --------------------------------------------
     Begin controllers.coffee
--------------------------------------------
*/


aMarked.controller('MainAppCtrl', [
  '$scope', function($scope) {
    var getSavedState, stor;
    $scope.stor = stor = new Stor();
    $scope.title = "ng-Bootstrap";
    $scope.preview = '';
    getSavedState = (function() {
      var filename, md;
      md = stor.get('aMarkedMarkdown');
      filename = stor.get('aMarkedFile');
      $scope.markdown = md != null ? md : '';
      return $scope.filename = filename != null ? filename : 'Untitled';
    })();
    $scope.editFileName = false;
    $scope.$on('markdownChange', function(e, md) {
      return stor.set('aMarkedMarkdown', md);
    });
    return $scope.updateFilename = function(e) {
      e.preventDefault();
      stor.set('aMarkedFile', $scope.filename);
      return $scope.editFileName = false;
    };
  }
]);
