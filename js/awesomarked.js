// Generated by CoffeeScript 1.4.0
/*
jQuery Easing v1.3 - http://gsgd.co.uk/sandbox/jquery/easing/
Copyright (c) 2008 George McGinley Smith and (c) 2001 Robert Penner
Open source under the BSD License. (http://www.opensource.org/licenses/bsd-license.php)

The rest - Written by Brian Frichette.
Copyright Â© 2012 Zodiac Pool Systems.
All rights reserved.
*/

var Stor, aMarked;

jQuery.easing.jswing = jQuery.easing.swing;

jQuery.extend(jQuery.easing, {
  def: "easeOutQuad",
  swing: function(x, t, b, c, d) {
    return jQuery.easing[jQuery.easing.def](x, t, b, c, d);
  },
  easeInQuad: function(x, t, b, c, d) {
    return c * (t /= d) * t + b;
  },
  easeOutQuad: function(x, t, b, c, d) {
    return -c * (t /= d) * (t - 2) + b;
  },
  easeInOutQuad: function(x, t, b, c, d) {
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t + b;
    }
    return -c / 2 * ((--t) * (t - 2) - 1) + b;
  },
  easeInQuint: function(x, t, b, c, d) {
    return c * (t /= d) * t * t * t * t + b;
  },
  easeOutQuint: function(x, t, b, c, d) {
    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
  },
  easeInOutQuint: function(x, t, b, c, d) {
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t * t * t * t + b;
    }
    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
  },
  easeInExpo: function(x, t, b, c, d) {
    if (t === 0) {
      return b;
    } else {
      return c * Math.pow(2, 10 * (t / d - 1)) + b;
    }
  },
  easeOutExpo: function(x, t, b, c, d) {
    if (t === d) {
      return b + c;
    } else {
      return c * (-Math.pow(2, -10 * t / d) + 1) + b;
    }
  },
  easeInOutExpo: function(x, t, b, c, d) {
    if (t === 0) {
      return b;
    }
    if (t === d) {
      return b + c;
    }
    if ((t /= d / 2) < 1) {
      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;
    }
    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;
  },
  easeInBounce: function(x, t, b, c, d) {
    return c - jQuery.easing.easeOutBounce(x, d - t, 0, c, d) + b;
  },
  easeOutBounce: function(x, t, b, c, d) {
    if ((t /= d) < (1 / 2.75)) {
      return c * (7.5625 * t * t) + b;
    } else if (t < (2 / 2.75)) {
      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;
    } else if (t < (2.5 / 2.75)) {
      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;
    } else {
      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;
    }
  },
  easeInOutBounce: function(x, t, b, c, d) {
    if (t < d / 2) {
      return jQuery.easing.easeInBounce(x, t * 2, 0, c, d) * 0.5 + b;
    }
    return jQuery.easing.easeOutBounce(x, t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;
  }
});

/* --------------------------------------------
     Begin slideFade.coffee
--------------------------------------------
*/


(function() {
  var $;
  $ = jQuery;
  $.fn.extend({
    'slideFade': function(type, horiz, options) {
      var animProps, checkHoriz, checkType, defaults, doAnim, getOpacityProps, o;
      checkType = $.type(type);
      switch (checkType) {
        case 'number':
          options = {
            duration: type
          };
          type = 'toggle';
          break;
        case 'object':
          options = type;
          type = 'toggle';
          break;
        default:
          type = (type != null) && checkType === 'string' ? type : 'toggle';
      }
      checkHoriz = $.type(horiz);
      switch (checkHoriz) {
        case 'number':
          options = {
            duration: horiz
          };
          horiz = false;
          break;
        case 'object':
          options = horiz;
          horiz = false;
          break;
        default:
          horiz = (horiz != null) && checkHoriz === 'boolean' ? horiz : false;
      }
      defaults = {
        duration: 600,
        easing: 'easeOutExpo',
        queue: false,
        complete: function() {}
      };
      o = $.extend(defaults, options);
      animProps = (function() {
        var attrs, i, props, which;
        props = ['Top', 'Right', 'Bottom', 'Left'];
        attrs = horiz ? {
          'width': type
        } : {
          'height': type
        };
        i = horiz ? 1 : 0;
        while (i < 4) {
          which = props[i];
          attrs["margin" + which] = attrs["padding" + which] = type;
          i += 2;
        }
        return attrs;
      })();
      getOpacityProps = function(el) {
        var op;
        op = {};
        switch (type) {
          case 'show':
            op.opacity = 1;
            op.duration = o.duration * 1.8;
            break;
          case 'hide':
            op.opacity = 0;
            op.duration = o.duration * 0.88;
            break;
          case 'toggle':
            if (el.is(':visible')) {
              op.opacity = 0;
              op.duration = o.duration * 0.88;
            } else {
              op.opacity = 1;
              op.duration = o.duration * 1.8;
            }
        }
        return op;
      };
      doAnim = function(el) {
        var op;
        op = getOpacityProps(el);
        return el.stop(true, true).animate(animProps, o).animate({
          'opacity': op.opacity
        }, op.duration, o.easing);
      };
      this.each(function() {
        var $this;
        $this = $(this);
        if (horiz) {
          animProps.height = $this.height();
        }
        return doAnim($this);
      });
      return this;
    }
  });
  $.fn.extend({
    'slideFadeUp': function(opts) {
      $.fn.slideFade.call(this, 'hide', opts);
    }
  });
  $.fn.extend({
    'slideFadeDown': function(opts) {
      $.fn.slideFade.call(this, 'show', opts);
    }
  });
  $.fn.extend({
    'slideFadeIn': function(opts) {
      $.fn.slideFade.call(this, 'show', true, opts);
    }
  });
  $.fn.extend({
    'slideFadeOut': function(opts) {
      $.fn.slideFade.call(this, 'hide', true, opts);
    }
  });
})();

/* --------------------------------------------
     Begin app.coffee
--------------------------------------------
*/


Stor = (function() {

  function Stor() {
    this.amp = amplify.store;
  }

  Stor.prototype.get = function(key) {
    return this.amp(key);
  };

  Stor.prototype.set = function(key, val, exp) {
    if (exp == null) {
      exp = null;
    }
    return this.amp(key, val, exp);
  };

  Stor.prototype.del = function(key) {
    return this.amp(key, null);
  };

  return Stor;

})();

aMarked = angular.module('aMarked', []);

/* --------------------------------------------
     Begin directives.coffee
--------------------------------------------
*/


aMarked.directive('markdownProcessor', function() {
  return {
    restrict: 'A',
    link: function(scope, elem, attrs) {
      var markedOpts;
      markedOpts = {
        gfm: true,
        sanitize: true,
        highlight: function(code, lang) {
          var hl;
          if (lang && hljs.LANGUAGES[lang]) {
            hl = hljs.highlight(lang, code);
          } else {
            hl = hljs.highlightAuto(code);
          }
          return hl.value;
        }
      };
      return scope.$watch('markdown', function(md) {
        var output;
        scope.$emit('markdownChange', md);
        output = marked(md, markedOpts);
        scope.preview = output;
      });
    }
  };
});

aMarked.directive('markdownPreview', function() {
  return {
    restrict: 'A',
    link: function(scope, elem, attrs) {
      return scope.$watch('preview', function(els) {
        return $(elem).empty().append(els);
      });
    }
  };
});

aMarked.directive('dialogbox', function() {
  return {
    transclude: true,
    template: "<div data-ng-transclude></div>",
    restrict: "A",
    replace: true,
    link: function(scope, elem, attrs) {
      var $elem, dur, opts, watchDimensions;
      $elem = $(elem).addClass('dialog');
      dur = 250;
      opts = {
        duration: dur,
        queue: false
      };
      watchDimensions = function(dims) {
        var margin, measure;
        margin = dims === 'width' ? 'marginLeft' : 'marginTop';
        measure = dims === 'width' ? 'outerWidth' : 'outerHeight';
        return scope.$watch(function() {
          var dim, hidden, last;
          hidden = $elem[0].style.display === 'none' ? true : false;
          last = this.last;
          if (angular.isFunction(last)) {
            return false;
          }
          if (hidden) {
            return last;
          }
          dim = $elem[measure].call($elem);
          dim = Math.abs(dim - last) > 2 ? dim : last;
          return dim;
        }, function(dim) {
          var props;
          props = {};
          props[margin] = -(dim / 2);
          $elem.animate(props, opts);
        });
      };
      watchDimensions('width');
      watchDimensions('height');
    }
  };
});

aMarked.directive('slideFadeShow', function() {
  return function(scope, elem, attrs) {
    var $elem, duration, exp, slideElem;
    $elem = $(elem);
    exp = attrs.slideFadeShow;
    duration = 600;
    slideElem = function(toShow, init) {
      if (init == null) {
        init = false;
      }
      if (!toShow && init === true) {
        return $elem.hide();
      }
      if (toShow) {
        $elem.slideFadeDown(duration);
      } else {
        $elem.slideFadeUp(duration);
      }
    };
    slideElem(scope.$eval(exp), true);
    return scope.$watch(function() {
      return scope.$eval(exp);
    }, function(toShow) {
      return slideElem(toShow);
    });
  };
});

aMarked.directive('fadeShow', function() {
  return function(scope, elem, attrs) {
    var $elem, duration, exp, fadeElem;
    $elem = $(elem);
    exp = attrs.fadeShow;
    duration = 400;
    fadeElem = function(toShow, init) {
      if (init == null) {
        init = false;
      }
      if (toShow) {
        $elem.fadeIn(duration);
      } else {
        if (init) {
          $elem.hide();
        } else {
          $elem.fadeOut(duration);
        }
      }
    };
    fadeElem(scope.$eval(exp), true);
    return scope.$watch(function() {
      return scope.$eval(exp);
    }, function(toShow) {
      return fadeElem(toShow);
    });
  };
});

/* --------------------------------------------
     Begin filters.coffee
--------------------------------------------
*/


/* --------------------------------------------
     Begin services.coffee
--------------------------------------------
*/


/* --------------------------------------------
     Begin controllers.coffee
--------------------------------------------
*/


aMarked.controller('MainAppCtrl', [
  '$scope', function($scope) {
    var getSavedState, stor;
    $scope.stor = stor = new Stor();
    $scope.title = "ng-Bootstrap";
    $scope.preview = '';
    $scope.showOptions = false;
    getSavedState = (function() {
      var filename, md;
      md = stor.get('aMarkedMarkdown');
      filename = stor.get('aMarkedFile');
      $scope.markdown = md != null ? md : '';
      return $scope.filename = filename != null ? filename : 'Untitled';
    })();
    $scope.editFileName = false;
    $scope.$on('markdownChange', function(e, md) {
      return stor.set('aMarkedMarkdown', md);
    });
    $scope.updateFilename = function(e) {
      e.preventDefault();
      stor.set('aMarkedFile', $scope.filename);
      return $scope.editFileName = false;
    };
    return $scope.closeOptions = function() {
      $scope.showOptions = false;
    };
  }
]);
